{"version":3,"sources":["firebae/config.js","firebae/firestore.js","components/login/index.jsx","hooks/useFirestore.js","context/AuthProvider.jsx","context/AppProvider.jsx","components/chatrooms/Message.jsx","components/chatrooms/ChatRoom.jsx","components/chatrooms/Userinfo.jsx","components/chatrooms/Roomlist.jsx","components/chatrooms/Slidebar.jsx","components/chatrooms/ChatWinDow.jsx","components/Modal/AddRoom.jsx","components/Modal/Invite.jsx","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","auth","db","firestore","addDocument","collection","data","add","createdAt","FieldValue","serverTimestamp","generateKeywords","displayName","name","split","filter","word","length","flagArray","result","stringArray","i","findPermutation","k","push","join","reduce","acc","cur","words","arrName","curName","forEach","letter","createKeywords","Title","Typography","fbProvider","FacebookAuthProvider","Login","handleFbLogin","a","signInWithPopup","additionalUserInfo","user","email","photoURL","uid","providerId","keywords","justify","style","height","span","textAlign","Level","width","marginBottom","onClick","useFirestore","condition","useState","documents","setDocuments","React","useEffect","collectionRef","orderBy","compareValue","where","fieldName","operator","onSnapshot","snapshot","docs","map","doc","id","AuthContext","createContext","AuthProvider","children","isLoading","setIsLoading","setUser","history","useHistory","unsubrise","onAuthStateChanged","console","log","Provider","value","AppContext","AppProvider","isAddRoomVisible","setIsAddRoomVisible","isInvite","setIsInvite","selectedRoomId","setSelectedRoomId","useContext","roomsCondition","useMemo","rooms","selectedRoom","find","room","userCondition","members","setlectedMember","WrapperStypled","styled","div","formatDate","seconds","formattedDate","formatRelative","Date","charAt","toUpperCase","slice","Message","text","size","src","Text","className","HeaderStyle","ButtonGroupStyle","ContentStyle","MessageListStyled","WrapperStyled","FormStyled","Form","ChatRoom","inputValue","setInputValue","useForm","form","handleSubmit","roomId","resetFields","message","description","icon","UserAddOutlined","type","Group","maxCount","member","title","mes","Item","onChange","e","target","onPressEnter","placeholder","bordered","autoComplete","showIcon","margin","closable","Userinfo","ghost","signOut","Panel","Collapse","PanelStyled","LinkStyled","Link","Roomlist","defaultActiveKey","header","PlusSquareOutlined","SlidebarStyled","Slidebar","ChatWinDow","AddRoom","visible","onOk","formData","getFieldsValue","onCancel","label","TextArea","DebounSelect","fetchOptions","debounceTimeout","props","fetching","setFetching","options","setOptions","debounceFetcher","debounce","currentMembers","then","newOptions","labelInValue","filterOption","onSearch","notFoundContent","opt","Option","fetchUserList","search","limit","get","includes","Invite","setValue","roomRef","update","val","layout","mode","newvalue","App","component","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4QAgBAA,IAASC,cAVY,CACnBC,OAAQ,0CACRC,WAAY,iCACZC,UAAW,iBACXC,cAAe,6BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAIjBR,IAASS,YAET,IAAMC,EAAOV,IAASU,OAChBC,EAAKX,IAASY,YAQLZ,IAAf,E,eC1Baa,EAAc,SAACC,EAAWC,GACrBJ,EAAGG,WAAWA,GAEtBE,IAAN,2BACOD,GADP,IAEIE,UAAWjB,EAASY,UAAUM,WAAWC,sBAGpCC,EAAmB,SAACC,GAgB7B,IAbA,IAAMC,EAAOD,EAAYE,MAAM,KAAKC,QAAO,SAACC,GAAD,OAAUA,KAE/CC,EAASJ,EAAKI,OAChBC,EAAY,GACZC,EAAS,GACTC,EAAc,GAQTC,EAAI,EAAGA,EAAIJ,EAAQI,IAC1BH,EAAUG,IAAK,EAoCjB,OAvBA,SAASC,EAAgBC,GACvB,IAAK,IAAIF,EAAI,EAAGA,EAAIJ,EAAQI,IACrBH,EAAUG,KACbH,EAAUG,IAAK,EACfF,EAAOI,GAAKV,EAAKQ,GAEbE,IAAMN,EAAS,GACjBG,EAAYI,KAAKL,EAAOM,KAAK,MAG/BH,EAAgBC,EAAI,GACpBL,EAAUG,IAAK,GAKrBC,CAAgB,GAECF,EAAYM,QAAO,SAACC,EAAKC,GACxC,IAAMC,EA7Be,SAAChB,GACtB,IAAMiB,EAAU,GACZC,EAAU,GAKd,OAJAlB,EAAKC,MAAM,IAAIkB,SAAQ,SAACC,GACtBF,GAAWE,EACXH,EAAQN,KAAKO,MAERD,EAsBOI,CAAeN,GAC7B,MAAM,GAAN,mBAAWD,GAAX,YAAmBE,MAClB,K,OCxDCM,EAAUC,IAAVD,MACFE,EAAa,IAAI9C,EAASU,KAAKqC,qBAoCtBC,MAlCR,WAGH,IAAMC,EAAa,uCAAG,gCAAAC,EAAA,sEACyBlD,EAASU,OAAOyC,gBAAgBL,GADzD,gBACVM,EADU,EACVA,mBAAoBC,EADV,EACUA,KAE5BxC,EAAY,OAAQ,CAChBQ,YAAagC,EAAKhC,YAClBiC,MAAOD,EAAKC,MACZC,SAAUF,EAAKE,SACfC,IAAKH,EAAKG,IACVC,WAAYL,EAAmBK,WAC/BC,SAAStC,EAAiBiC,EAAKhC,eATjB,2CAAH,qDAcnB,OACI,mCACI,cAAC,IAAD,CAAKsC,QAAQ,SAASC,MAAO,CAAEC,OAAQ,KAAvC,SACI,eAAC,IAAD,CAAKC,KAAM,EAAX,UACI,cAAClB,EAAD,CAAOgB,MAAO,CAAEG,UAAW,UAAYC,MAAO,EAA9C,sBACA,cAAC,IAAD,CAAQJ,MAAO,CAAEK,MAAO,OAAQC,aAAc,GAA9C,+BAGA,cAAC,IAAD,CAAQN,MAAO,CAAEK,MAAO,QAAUE,QAASlB,EAA3C,yC,6FCOLmB,EArCa,SAACtD,EAAYuD,GACvC,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAiCA,OA/BAC,IAAMC,WAAU,WACd,IAAIC,EAAgBhE,EAAGG,WAAWA,GAAY8D,QAAQ,aAEtD,GAAIP,EAAW,CACb,IAAKA,EAAUQ,eAAiBR,EAAUQ,aAAanD,OACrD,OAGFiD,EAAgBA,EAAcG,MAC5BT,EAAUU,UACVV,EAAUW,SACVX,EAAUQ,cAWd,OAPmBF,EAAcM,YAAW,SAACC,GAC3C,IAAMX,EAAYW,EAASC,KAAKC,KAAI,SAACC,GAAD,mBAAC,eAChCA,EAAItE,QAD2B,IAElCuE,GAAID,EAAIC,QAEVd,EAAaD,QAUd,CAACzD,EAAYuD,IACTE,G,SC9BIgB,EAAcd,IAAMe,gBAClB,SAASC,EAAT,GAAqC,IAAbC,EAAY,EAAZA,SAGnC,EAAkCpB,oBAAS,GAA3C,mBAAOqB,EAAP,KAAkBC,EAAlB,KAEA,EAAwBtB,mBAAS,IAAjC,mBAAOjB,EAAP,KAAawC,EAAb,KAEMC,EAAUC,cAuBhB,OApBAtB,IAAMC,WAAU,WACZ,IAAMsB,EAAYhG,EAASU,OAAOuF,oBAAmB,SAAC5C,GAElD,GADA6C,QAAQC,IAAI,CAAE9C,SACVA,EAAM,CACNuC,GAAa,GACb,IAAQvE,EAAsCgC,EAAtChC,YAAakC,EAAyBF,EAAzBE,SAAUD,EAAeD,EAAfC,MAAOE,EAAQH,EAARG,IAGtC,OAFAqC,EAAQ,CAAExE,cAAakC,WAAUD,QAAOE,aACxCsC,EAAQ7D,KAAK,SAQrB,OAHA2D,GAAa,GACbE,EAAQ7D,KAAK,UAEN,WACH+D,OAEL,CAACF,IAGA,cAACP,EAAYa,SAAb,CAAsBC,MAAO,CAAEhD,QAA/B,SACKsC,EAAY,cAAC,IAAD,0BAA2BD,ICpC7C,IAAMY,EAAa7B,IAAMe,gBACjB,SAASe,EAAT,GAAoC,IAAbb,EAAY,EAAZA,SAGlC,EAAgDpB,oBAAS,GAAzD,mBAAOkC,EAAP,KAAyBC,EAAzB,KACA,EAAgCnC,oBAAS,GAAzC,mBAAOoC,EAAP,KAAiBC,EAAjB,KAEA,EAA4CrC,mBAAS,IAArD,mBAAOsC,EAAP,KAAuBC,EAAvB,KAIgBrD,EAAUiB,IAAMqC,WAAWvB,GAAnClC,KAAQG,IAEVuD,EAAiBtC,IAAMuC,SAAQ,WACjC,MAAO,CACHjC,UAAW,UACXC,SAAU,iBACVH,aAAcrB,KAEnB,CAACA,IAKEyD,EAAQ7C,EAAa,QAAS2C,GACpCb,QAAQC,IAAI,CAAEc,UAEd,IAAMC,EAAeF,mBAAQ,kBAAMC,EAAME,MAAK,SAACC,GAAD,OAAUA,EAAK9B,KAAOsB,MAAmB,KAAI,CAACK,EAAOL,IAG7FS,EAAgB5C,IAAMuC,SAAQ,WAChC,MAAO,CACHjC,UAAW,MACXC,SAAU,KACVH,aAAcqC,EAAaI,WAEhC,CAACJ,EAAaI,UAEXA,EAAUlD,EAAa,OAAQiD,GAErC,OADAnB,QAAQC,IAAI,CAAEmB,UAASC,gBAAiBL,EAAaI,UAEjD,cAAChB,EAAWF,SAAZ,CAAqBC,MAAO,CAAEY,QAAOT,mBAAkBC,sBAAqBG,iBAAgBC,oBAAmBK,eAAcI,UAASZ,WAAUC,eAAhJ,SACKjB,I,2BCxCP8B,EAAiBC,IAAOC,IAAV,kRAepB,SAASC,EAAWC,GAChB,IAAIC,EAAgB,GAOpB,OALID,IAGAC,GAFAA,EAAgBC,YAAe,IAAIC,KAAe,IAAVH,GAAiB,IAAIG,OAE/BC,OAAO,GAAGC,cAAgBJ,EAAcK,MAAM,IAEzEP,EAGI,SAASQ,EAAT,GAA8D,IAAD,EAA1CC,EAA0C,EAA1CA,KAAM/G,EAAoC,EAApCA,YAAaJ,EAAuB,EAAvBA,UAAWsC,EAAY,EAAZA,SAC5D,OACI,eAACiE,EAAD,WACI,gCACI,cAAC,IAAD,CAAQa,KAAK,QAAQC,IAAK/E,EAA1B,SACKA,EAAW,GAAH,OAAQlC,QAAR,IAAQA,GAAR,UAAQA,EAAa2G,OAAO,UAA5B,aAAQ,EAAwBC,gBAE7C,cAAC,IAAWM,KAAZ,CAAiBC,UAAU,SAA3B,SAAqCnH,IACrC,cAAC,IAAWkH,KAAZ,CAAiBC,UAAU,OAA3B,SAAmCb,EAAU,OAAC1G,QAAD,IAACA,OAAD,EAACA,EAAW2G,cAE7D,8BACI,cAAC,IAAWW,KAAZ,CAAiBC,UAAU,UAA3B,SAAsCJ,SC/BtD,I,GAAMK,GAAchB,IAAOC,IAAV,geAuBXgB,GAAmBjB,IAAOC,IAAV,iEAKhBiB,GAAelB,IAAOC,IAAV,4IAQZkB,GAAoBnB,IAAOC,IAAV,iEAKjBmB,GAAgBpB,IAAOC,IAAV,2CAKboB,GAAarB,YAAOsB,IAAPtB,CAAH,sRAyFDuB,GA3EE,WACb,MAEMlC,qBAAWvB,GAFTlC,KACJG,EADJ,EACIA,IAAKD,EADT,EACSA,SAAUlC,EADnB,EACmBA,YAEnB,EAA+CyF,qBAAWR,GAAlDY,EAAR,EAAQA,aAAcI,EAAtB,EAAsBA,QAASX,EAA/B,EAA+BA,YAC/B,EAAoCrC,mBAAS,IAA7C,mBAAO2E,EAAP,KAAmBC,EAAnB,KACA,EAAeH,IAAKI,UAAbC,EAAP,oBAEMC,EAAe,WACjBxI,EAAY,UAAW,CACnBuH,KAAMa,EACNzF,MACAD,WACA+F,OAAQpC,EAAa5B,GACrBjE,gBAEJ+H,EAAKG,YAAY,CAAC,aAShBC,GANmBxC,mBAAQ,kBAGfE,EAAa5B,GAC5B,CAAC4B,EAAa5B,OAEDlB,EAAa,YAO7B,OACI,cAACyE,GAAD,UAEQ3B,EAAa5B,GAAM,qCACf,eAACmD,GAAD,WACI,sBAAKD,UAAU,eAAf,UACI,mBAAGA,UAAU,gBAAb,SAA8BtB,EAAa5F,OAC3C,uBAAMkH,UAAU,sBAAhB,UAAuCtB,EAAauC,YAApD,UAEJ,cAACf,GAAD,UACI,gCACI,cAAC,IAAD,CAAQgB,KAAM,cAACC,EAAA,EAAD,IAAqBxF,QAAS,kBAAMwC,GAAY,IAAOiD,KAAK,OAA1E,sBACA,cAAC,IAAOC,MAAR,CAAcxB,KAAK,QAAQyB,SAAU,EAArC,SACKxC,EAAQlC,KAAI,SAAA2E,GAAM,aAAI,cAAC,IAAD,CAASC,MAAOD,EAAO1I,YAAvB,SACnB,cAAC,IAAD,CAAQiH,IAAKyB,EAAOxG,SAApB,SACKwG,EAAOxG,SAAW,GAAlB,UAAuBwG,EAAO1I,mBAA9B,aAAuB,EAAoB2G,OAAO,GAAGC,iBAFE8B,EAAOzE,iBASvF,eAACqD,GAAD,WACI,cAACC,GAAD,UAEQY,EAAQpE,KAAI,SAAA6E,GAAG,OAAI,cAAC9B,EAAD,CAAsBC,KAAM6B,EAAI7B,KAAM7E,SAAU0G,EAAI1G,SAAUlC,YAAa4I,EAAI5I,YAAaJ,UAAWgJ,EAAIhJ,WAA7FgJ,EAAI3E,SAI7C,eAACwD,GAAD,CAAYM,KAAMA,EAAlB,UACI,cAAC,IAAKc,KAAN,CAAW5I,KAAK,UAAhB,SACI,cAAC,IAAD,CAAO6I,SApCb,SAACC,GACnBlB,EAAckB,EAAEC,OAAOhE,QAmCiCiE,aAAcjB,EAAckB,YAAY,0BAAgBC,UAAU,EAAOC,aAAa,UAE1H,cAAC,IAAD,CAAQb,KAAK,UAAUzF,QAASkF,EAAhC,+BAGL,cAAC,IAAD,CAAOG,QAAQ,6BAAkBI,KAAK,OAAOc,UAAQ,EAAC9G,MAAO,CAAE+G,OAAQ,OAASC,UAAQ,OCtIzG/B,GAAgBpB,IAAOC,IAAV,qOAWJ,SAASmD,KAAY,IAAD,EAE/B,EAEMpG,IAAMqC,WAAWvB,GAFflC,KACJhC,EADJ,EACIA,YAAakC,EADjB,EACiBA,SAIjB,OACI,eAAC,GAAD,WACI,gCACI,cAAC,IAAD,CAAQ+E,IAAK/E,EAAb,SAAwBA,EAAW,GAAH,OAAQlC,QAAR,IAAQA,GAAR,UAAQA,EAAa2G,OAAO,UAA5B,aAAQ,EAAwBC,gBAChE,cAAC,IAAWM,KAAZ,CAAiBC,UAAU,WAA3B,SAAuCnH,OAE3C,cAAC,IAAD,CAAQyJ,OAAK,EAAC3G,QAAS,kBAAMzD,EAAKqK,WAAlC,0C,iCCtBJC,GAAUC,KAAVD,MAEFE,GAAczD,YAAOuD,GAAPvD,CAAH,oMAWX0D,GAAa1D,YAAO5E,IAAWuI,KAAlB3D,CAAH,6FAOD,SAAS4D,KAEpB,MAA0DvE,qBAAWR,GAA7DW,EAAR,EAAQA,MAAOR,EAAf,EAAeA,oBAAsBI,EAArC,EAAqCA,kBAKrC,OACI,cAAC,KAAD,CAAUiE,OAAK,EAACQ,iBAAkB,CAAC,KAAnC,SACI,eAACJ,GAAD,CAAaK,OAAO,wBAApB,UAEQtE,EAAM7B,KAAI,SAAAgC,GAAI,OAAI,cAAC+D,GAAD,CAAYhH,QAAS,kBAAM0C,EAAkBO,EAAK9B,KAAlD,SAAsE8B,EAAK9F,MAAf8F,EAAK9B,OAEvF,cAAC,IAAD,CAAQsE,KAAK,OAAOF,KAAM,cAAC8B,GAAA,EAAD,IAAwBrH,QAVxC,WAClBsC,GAAoB,IAS8D+B,UAAU,WAApF,gCAJsC,OC9BtD,IAAMiD,GAAiBhE,IAAOC,IAAV,iGAML,SAASgE,KAIpB,OACI,cAACD,GAAD,UACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAK3H,KAAM,GAAX,SACI,cAAC+G,GAAD,MAEJ,cAAC,IAAD,CAAK/G,KAAM,GAAX,SACI,cAACuH,GAAD,WCpBL,SAASM,KACpB,OACI,8BACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAK7H,KAAM,EAAX,SACI,cAAC4H,GAAD,MAEJ,cAAC,IAAD,CAAK5H,KAAM,GAAX,SACI,cAAC,GAAD,W,cCNL,SAAS8H,KAEpB,MAAkD9E,qBAAWR,GAArDE,EAAR,EAAQA,iBAAkBC,EAA1B,EAA0BA,oBACVjD,EAAUsD,qBAAWvB,GAA7BlC,KAAQG,IAGhB,EAAeuF,IAAKI,UAAbC,EAAP,oBAgBA,OACI,mCACI,8BACI,cAAC,KAAD,CACIY,MAAM,oBACN6B,QAASrF,EACTsF,KApBC,WAEb5F,QAAQC,IAAI,CAAE4F,SAAU3C,EAAK4C,mBAC7BvF,GAAoB,GACpB5F,EAAY,QAAD,YAAC,eAAcuI,EAAK4C,kBAApB,IAAsC1E,QAAS,CAAC9D,MAG3D4F,EAAKG,eAcO0C,SAXK,WACjB7C,EAAKG,cACL9C,GAAoB,IAKZ,SAMI,eAAC,IAAD,CAAM2C,KAAMA,EAAZ,UACI,cAAC,IAAKc,KAAN,CAAWgC,MAAM,kBAAY5K,KAAK,OAAlC,SACI,cAAC,IAAD,CAAOiJ,YAAY,gCAEvB,cAAC,IAAKL,KAAN,CAAWgC,MAAM,mBAAc5K,KAAK,cAApC,SACI,cAAC,IAAM6K,SAAP,CAAgB5B,YAAY,uC,4FChCxD,SAAS6B,GAAT,GAA0E,IAAlDC,EAAiD,EAAjDA,aAAiD,IAAnCC,uBAAmC,MAAjB,IAAiB,EAATC,EAAS,mBACrE,EAAgCjI,oBAAS,GAAzC,mBAAOkI,EAAP,KAAiBC,EAAjB,KACA,EAA8BnI,mBAAS,IAAvC,mBAAOoI,EAAP,KAAgBC,EAAhB,KAIMC,EAAkBnI,IAAMuC,SAAQ,WAclC,OAAO6F,qBAba,SAAAxG,GAChBsG,EAAW,IACXF,GAAY,GAKZJ,EAAahG,EAAOkG,EAAMO,gBACrBC,MAAK,SAAAC,GACFL,EAAWK,GACXP,GAAY,QAGKH,KAC9B,CAACA,EAAiBD,IACrB,OACI,cAAC,KAAD,yBACIY,cAAY,EACZC,cAAc,EACdC,SAAUP,EACVQ,gBAAiBZ,EAAW,cAAC,IAAD,CAAMnE,KAAK,UAAa,MAChDkE,GALR,aAQQG,EAAQtH,KAAK,SAAAiI,GAAG,aAAK,eAAC,KAAOC,OAAR,CAA+BjH,MAAOgH,EAAIhH,MAAO2D,MAAOqD,EAAInB,MAA5D,UACjB,cAAC,KAAD,CAAQ7D,KAAK,QAAQC,IAAK+E,EAAI9J,SAA9B,SACK8J,EAAI9J,SAAW,GAAf,UAAoB8J,EAAInB,aAAxB,aAAoB,EAAWlE,OAAO,GAAGC,gBAF7B,UAIboF,EAAInB,SAJ6BmB,EAAIhH,a,SAa9CkH,G,mFAAf,WAA6BC,EAAQV,GAArC,SAAA5J,EAAA,+EACWvC,EAAGG,WAAW,QAAQgE,MAAM,WAAY,iBAAkB0I,GAAQ5I,QAAQ,eAAe6I,MAAM,IAAIC,MAAMX,MAAK,SAAA7H,GACjH,OAAOA,EAASC,KAAKC,KAAI,SAAAC,GAAG,MAAK,CAC7B6G,MAAO7G,EAAItE,OAAOM,YAClBgF,MAAOhB,EAAItE,OAAOyC,IAClBD,SAAU8B,EAAItE,OAAOwC,aACrB/B,QAAO,SAAA6L,GAAG,OAAKP,EAAea,SAASN,EAAIhH,cANvD,4C,sBAWe,SAASuH,KACpB,MAA0BtJ,mBAAS,IAAnC,mBAAO+B,EAAP,KAAcwH,EAAd,KACA,EAAgE/G,qBAAWR,GAAnEI,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,YAAaC,EAA/B,EAA+BA,eAAgBM,EAA/C,EAA+CA,aAI/C,GAH0BJ,qBAAWvB,GAA7BlC,KAAQG,IAGDuF,IAAKI,WAAbC,EAAP,oBAmBA,OACI,mCACI,8BACI,cAAC,KAAD,CACIY,MAAM,oCACN6B,QAASnF,EACToF,KAvBC,WAGb1C,EAAKG,cAEL,IAAMuE,EAAUnN,EAAGG,WAAW,SAASuE,IAAIuB,GAC3CD,GAAY,GAEZmH,EAAQC,OAAO,CACXzG,QAAQ,GAAD,mBAAMJ,EAAaI,SAAnB,YAA+BjB,EAAMjB,KAAI,SAAC4I,GAAD,OAASA,EAAI3H,cAerD4F,SAXK,WACjB7C,EAAKG,cACL5C,GAAY,IAKJ,SAMI,cAAC,IAAD,CAAMyC,KAAMA,EAAM6E,OAAO,WAAzB,SACI,cAAC7B,GAAD,CACI8B,KAAK,WACLhC,MAAM,iCACN7F,MAAOA,EACPkE,YAAY,iEACZ8B,aAAckB,GACdpD,SAAU,SAACgE,GAAD,OAAcN,EAASM,IACjCvK,MAAO,CAAEK,MAAO,QAChB6I,eAAgB5F,EAAaI,kBChF1C8G,OAnBf,WACE,OACE,qBAAK5F,UAAU,MAAf,SACE,cAAC,IAAD,UACE,cAAC/C,EAAD,UACE,eAACc,EAAD,WACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO8H,UAAWrL,EAAOsL,KAAK,WAC9B,cAAC,IAAD,CAAOD,UAAW1C,GAAY2C,KAAK,SAErC,cAAC1C,GAAD,IACA,cAACgC,GAAD,cCRGW,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB1B,MAAK,YAAkD,IAA/C2B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1BZ,O","file":"static/js/main.9997551e.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\n\r\nimport \"firebase/analytics\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\n\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyDaEekDUR-2gbWW_s3WJhJAk6uLs_juEiY\",\r\n  authDomain: \"app-chat-1449a.firebaseapp.com\",\r\n  projectId: \"app-chat-1449a\",\r\n  storageBucket: \"app-chat-1449a.appspot.com\",\r\n  messagingSenderId: \"142216938529\",\r\n  appId: \"1:142216938529:web:ebadc94ef6da4bccc60f60\",\r\n  measurementId: \"G-G4YQQ8J1ZB\",\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nfirebase.analytics();\r\n\r\nconst auth = firebase.auth();\r\nconst db = firebase.firestore();\r\n\r\n// auth.useEmulator(\"http://localhost:9099\");\r\n// if (window.location.hostname === \"localhost\") {\r\n//   db.useEmulator(\"localhost\", \"8080\");\r\n// }\r\n\r\nexport { auth, db };\r\nexport default firebase;\r\n","import firebase, { db } from \"./config\"\r\n\r\nexport const addDocument = (collection,data) => {\r\n    const query = db.collection(collection);\r\n\r\n    query.add({\r\n        ...data,\r\n        createdAt: firebase.firestore.FieldValue.serverTimestamp()\r\n    })\r\n}\r\nexport const generateKeywords = (displayName) => {\r\n    // liet ke tat cac hoan vi. vd: name = [\"David\", \"Van\", \"Teo\"]\r\n    // => [\"David\", \"Van\", \"Teo\"], [\"David\", \"Teo\", \"Van\"], [\"Teo\", \"David\", \"Van\"],...\r\n    const name = displayName.split(' ').filter((word) => word);\r\n  \r\n    const length = name.length;\r\n    let flagArray = [];\r\n    let result = [];\r\n    let stringArray = [];\r\n  \r\n    /**\r\n     * khoi tao mang flag false\r\n     * dung de danh dau xem gia tri\r\n     * tai vi tri nay da duoc su dung\r\n     * hay chua\r\n     **/\r\n    for (let i = 0; i < length; i++) {\r\n      flagArray[i] = false;\r\n    }\r\n  \r\n    const createKeywords = (name) => {\r\n      const arrName = [];\r\n      let curName = '';\r\n      name.split('').forEach((letter) => {\r\n        curName += letter;\r\n        arrName.push(curName);\r\n      });\r\n      return arrName;\r\n    };\r\n  \r\n    function findPermutation(k) {\r\n      for (let i = 0; i < length; i++) {\r\n        if (!flagArray[i]) {\r\n          flagArray[i] = true;\r\n          result[k] = name[i];\r\n  \r\n          if (k === length - 1) {\r\n            stringArray.push(result.join(' '));\r\n          }\r\n  \r\n          findPermutation(k + 1);\r\n          flagArray[i] = false;\r\n        }\r\n      }\r\n    }\r\n  \r\n    findPermutation(0);\r\n  \r\n    const keywords = stringArray.reduce((acc, cur) => {\r\n      const words = createKeywords(cur);\r\n      return [...acc, ...words];\r\n    }, []);\r\n  \r\n    return keywords;\r\n  };","import React from 'react'\r\nimport { Row, Col, Button, Typography } from 'antd'\r\nimport firebase, { auth, db } from '../../firebae/config';\r\nimport { useHistory } from 'react-router-dom'\r\nimport { addDocument, generateKeywords } from '../../firebae/firestore';\r\nconst { Title } = Typography\r\nconst fbProvider = new firebase.auth.FacebookAuthProvider()\r\n\r\nexport function Login() {\r\n\r\n\r\n    const handleFbLogin = async () => {\r\n        const { additionalUserInfo, user } = await firebase.auth().signInWithPopup(fbProvider)\r\n\r\n        addDocument('user', {\r\n            displayName: user.displayName,\r\n            email: user.email,\r\n            photoURL: user.photoURL,\r\n            uid: user.uid,\r\n            providerId: additionalUserInfo.providerId,\r\n            keywords:generateKeywords(user.displayName)\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <Row justify='center' style={{ height: 800 }}>\r\n                <Col span={8} >\r\n                    <Title style={{ textAlign: 'center' }} Level={3}>WEB CHAT</Title>\r\n                    <Button style={{ width: '100%', marginBottom: 5 }}>\r\n                        LOGIN WITH GOOGLE\r\n                    </Button>\r\n                    <Button style={{ width: '100%' }} onClick={handleFbLogin}>\r\n                        LOGIN WITH FACEBOOK\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Login","import React, { useState } from \"react\";\r\nimport { db } from \"../firebae/config\";\r\n\r\nexport const useFirestore = (collection, condition) => {\r\n  const [documents, setDocuments] = useState([]);\r\n\r\n  React.useEffect(() => {\r\n    var collectionRef = db.collection(collection).orderBy(\"createdAt\");\r\n\r\n    if (condition) {\r\n      if (!condition.compareValue || !condition.compareValue.length) {\r\n        return;\r\n      }\r\n\r\n      collectionRef = collectionRef.where(\r\n        condition.fieldName,\r\n        condition.operator,\r\n        condition.compareValue\r\n      );\r\n    }\r\n\r\n    const unsubsrise = collectionRef.onSnapshot((snapshot) => {\r\n      const documents = snapshot.docs.map((doc) => ({\r\n        ...doc.data(),\r\n        id: doc.id,\r\n      }));\r\n      setDocuments(documents);\r\n    });\r\n    return unsubsrise;\r\n\r\n    // .onSnapshot((snapshot) => {\r\n    //   const data = snapshot.docs.map((doc) => ({\r\n    //     ...doc.data(),\r\n    //     id: doc.id,\r\n    //   }));\r\n    // });\r\n  }, [collection, condition]);\r\n  return documents;\r\n};\r\n\r\nexport default useFirestore;\r\n","import { Spin } from 'antd';\r\nimport React, { useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport firebase, { auth } from '../firebae/config';\r\n\r\n\r\n\r\nexport const AuthContext = React.createContext()\r\nexport default function AuthProvider({ children }) {\r\n\r\n\r\n    const [isLoading, setIsLoading] = useState(true)\r\n\r\n    const [user, setUser] = useState({})\r\n\r\n    const history = useHistory()\r\n\r\n\r\n    React.useEffect(() => {\r\n        const unsubrise = firebase.auth().onAuthStateChanged((user) => {\r\n            console.log({ user })\r\n            if (user) {\r\n                setIsLoading(false)\r\n                const { displayName, photoURL, email, uid } = user\r\n                setUser({ displayName, photoURL, email, uid })\r\n                history.push('/')\r\n                return\r\n            }\r\n        }\r\n        )\r\n        setIsLoading(false)\r\n        history.push('/login')\r\n        //clean function\r\n        return () => {\r\n            unsubrise()\r\n        }\r\n    }, [history])\r\n\r\n    return (\r\n        <AuthContext.Provider value={{ user }}>\r\n            {isLoading ? <Spin>Loading....</Spin> : children}\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n\r\n","import React, { useMemo, useState } from \"react\"\r\nimport useFirestore from \"../hooks/useFirestore\"\r\nimport { AuthContext } from \"./AuthProvider\"\r\n\r\nexport const AppContext = React.createContext()\r\nexport default function AppProvider({ children }) {\r\n\r\n\r\n    const [isAddRoomVisible, setIsAddRoomVisible] = useState(false)\r\n    const [isInvite, setIsInvite] = useState(false)\r\n\r\n    const [selectedRoomId, setSelectedRoomId] = useState('')\r\n\r\n\r\n\r\n    const { user: { uid } } = React.useContext(AuthContext)\r\n\r\n    const roomsCondition = React.useMemo(() => {\r\n        return {\r\n            fieldName: 'members',\r\n            operator: 'array-contains',\r\n            compareValue: uid\r\n        }\r\n    }, [uid])\r\n\r\n\r\n\r\n\r\n    const rooms = useFirestore('rooms', roomsCondition)\r\n    console.log({ rooms })\r\n\r\n    const selectedRoom = useMemo(() => rooms.find((room) => room.id === selectedRoomId) || {}, [rooms, selectedRoomId])\r\n\r\n\r\n    const userCondition = React.useMemo(() => {\r\n        return {\r\n            fieldName: 'uid',\r\n            operator: 'in',\r\n            compareValue: selectedRoom.members,\r\n        }\r\n    }, [selectedRoom.members])\r\n\r\n    const members = useFirestore('user', userCondition)\r\n    console.log({ members, setlectedMember: selectedRoom.members })\r\n    return (\r\n        <AppContext.Provider value={{ rooms, isAddRoomVisible, setIsAddRoomVisible, selectedRoomId, setSelectedRoomId, selectedRoom, members, isInvite, setIsInvite }}>\r\n            {children}\r\n        </AppContext.Provider>\r\n    )\r\n}","import { Typography, Avatar } from 'antd'\r\nimport { formatRelative } from 'date-fns/esm';\r\nimport React from 'react'\r\nimport styled from 'styled-components'\r\n\r\n\r\nconst WrapperStypled = styled.div`\r\n    margin-bottom:10px;\r\n    .Author{\r\n        margin-left:5px;\r\n        font-weight: bold;\r\n    };\r\n    .Date{\r\n        margin-left:10px;\r\n        font-size:11px;\r\n        color:#a7a7a7;\r\n    }\r\n    .Content{\r\n        margin-left: 30px;\r\n    }\r\n`;\r\nfunction formatDate(seconds) {\r\n    let formattedDate = '';\r\n\r\n    if (seconds) {\r\n        formattedDate = formatRelative(new Date(seconds * 1000), new Date())\r\n\r\n        formattedDate = formattedDate.charAt(0).toUpperCase() + formattedDate.slice(1)\r\n    }\r\n    return formatDate\r\n}\r\n\r\nexport default function Message({ text, displayName, createdAt, photoURL }) {\r\n    return (\r\n        <WrapperStypled>\r\n            <div>\r\n                <Avatar size='small' src={photoURL}>\r\n                    {photoURL ? '' : displayName?.charAt(0)?.toUpperCase()}\r\n                </Avatar>\r\n                <Typography.Text className='Author'>{displayName}</Typography.Text>\r\n                <Typography.Text className='Date'>{formatDate(createdAt?.seconds)}</Typography.Text>\r\n            </div>\r\n            <div>\r\n                <Typography.Text className='Content'>{text}</Typography.Text>\r\n            </div>\r\n        </WrapperStypled>\r\n    )\r\n}\r\n","import { UserAddOutlined } from '@ant-design/icons';\r\nimport { Button, Avatar, Tooltip, Input, Form, Alert } from 'antd';\r\nimport { formatRelative } from 'date-fns';\r\nimport React, { useContext, useMemo, useState } from 'react';\r\nimport styled from 'styled-components'\r\nimport { AppContext } from '../../context/AppProvider';\r\nimport { AuthContext } from '../../context/AuthProvider';\r\nimport { addDocument } from '../../firebae/firestore';\r\nimport useFirestore from '../../hooks/useFirestore';\r\nimport Message from './Message';\r\n\r\n\r\nconst HeaderStyle = styled.div`\r\n    display:flex;\r\n    justify-content:space-between;\r\n    height:56px;\r\n    padding: 0 16px;\r\n    border-bottom: 1px solid rgba(230, 230, 230);\r\n\r\n    .header{\r\n        &__info{\r\n            display: flex;\r\n            flex-direction: column;\r\n            justify-content:center;\r\n        }\r\n\r\n        &__title{\r\n            margin: 0;\r\n            font-weight:bold;\r\n        }\r\n        &__description{\r\n            font-size:12px;\r\n        }\r\n    }\r\n`;\r\nconst ButtonGroupStyle = styled.div`\r\ndisplay: flex;\r\nalign-items:center;\r\n`;\r\n\r\nconst ContentStyle = styled.div`\r\nheight: calc(100% - 56px);\r\ndisplay:flex;\r\nflex-direction: column;\r\npadding: 11px;\r\njustify-content: flex-end;\r\n`;\r\n\r\nconst MessageListStyled = styled.div`\r\nmax-height:100%;\r\noverflow-y: auto;\r\n`;\r\n\r\nconst WrapperStyled = styled.div`\r\nheight:100vh;\r\n`;\r\n\r\n\r\nconst FormStyled = styled(Form)`\r\n    display:flex;\r\n    justify-content:space-between;\r\n    align-items: center;\r\n    padding: 2px 2px 2px 0px;\r\n    border: 1px solid rgb(230,230,230);\r\n    border-radius:2px;\r\n\r\n    .ant-form-item{\r\n        flex:1;\r\n        margin-bottom:0;\r\n    }\r\n`;\r\n\r\nconst ChatRoom = () => {\r\n    const { user: {\r\n        uid, photoURL, displayName\r\n    } } = useContext(AuthContext)\r\n    const { selectedRoom, members, setIsInvite } = useContext(AppContext)\r\n    const [inputValue, setInputValue] = useState('')\r\n    const [form] = Form.useForm()\r\n\r\n    const handleSubmit = () => {\r\n        addDocument('message', {\r\n            text: inputValue,\r\n            uid,\r\n            photoURL,\r\n            roomId: selectedRoom.id,\r\n            displayName\r\n        })\r\n        form.resetFields(['message'])\r\n    }\r\n\r\n    const messageCondition = useMemo(() => ({\r\n        fieldName: 'roomId',\r\n        operator: '==',\r\n        compareValue: selectedRoom.id\r\n    }, [selectedRoom.id]))\r\n\r\n    const message = useFirestore('message')\r\n\r\n    const handleOnChage = (e) => {\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n\r\n    return (\r\n        <WrapperStyled>\r\n            {\r\n                selectedRoom.id ? (<>\r\n                    <HeaderStyle>\r\n                        <div className='header__info'>\r\n                            <p className='header__title'>{selectedRoom.name}</p>\r\n                            <span className='header__description'>{selectedRoom.description} </span>\r\n                        </div>\r\n                        <ButtonGroupStyle>\r\n                            <div>\r\n                                <Button icon={<UserAddOutlined />} onClick={() => setIsInvite(true)} type='text'>Mời</Button>\r\n                                <Avatar.Group size='small' maxCount={3}>\r\n                                    {members.map(member => <Tooltip title={member.displayName} key={member.id}>\r\n                                        <Avatar src={member.photoURL}>\r\n                                            {member.photoURL ? '' : member.displayName?.charAt(0).toUpperCase()}\r\n                                        </Avatar>\r\n                                    </Tooltip>)}\r\n                                </Avatar.Group>\r\n                            </div>\r\n                        </ButtonGroupStyle>\r\n                    </HeaderStyle>\r\n                    <ContentStyle>\r\n                        <MessageListStyled>\r\n                            {\r\n                                message.map(mes => <Message key={mes.id} text={mes.text} photoURL={mes.photoURL} displayName={mes.displayName} createdAt={mes.createdAt}></Message>)\r\n                            }\r\n\r\n                        </MessageListStyled>\r\n                        <FormStyled form={form}>\r\n                            <Form.Item name='message'>\r\n                                <Input onChange={handleOnChage} onPressEnter={handleSubmit} placeholder=\"nhập tin nhắn\" bordered={false} autoComplete='off' />\r\n                            </Form.Item>\r\n                            <Button type=\"primary\" onClick={handleSubmit} >Gửi</Button>\r\n                        </FormStyled>\r\n                    </ContentStyle>\r\n                </>) : <Alert message=\"Hãy Chọn Phòng \" type='info' showIcon style={{ margin: '5px' }} closable />\r\n            }\r\n\r\n        </WrapperStyled>\r\n    )\r\n}\r\n\r\nexport default ChatRoom\r\n","import { Avatar, Typography } from 'antd'\r\nimport { Button } from 'antd'\r\nimport React from 'react'\r\nimport styled from 'styled-components'\r\nimport { auth, db } from '../../firebae/config'\r\nimport { AuthContext } from '../../context/AuthProvider'\r\nconst WrapperStyled = styled.div`\r\n    display:flex;\r\n    justify-content:space-between;\r\n    padding : 12px 16px;\r\n    border-bottom: 1px solid rgba(82,38,83);\r\n    .Username{\r\n        color:white;\r\n        margin-left: 5px;\r\n    }\r\n`\r\n\r\nexport default function Userinfo() {\r\n\r\n    const { user: {\r\n        displayName, photoURL\r\n    } } = React.useContext(AuthContext)\r\n \r\n\r\n    return (\r\n        <WrapperStyled>\r\n            <div>\r\n                <Avatar src={photoURL}>{photoURL ? '' : displayName?.charAt(0)?.toUpperCase()}</Avatar>\r\n                <Typography.Text className='Username'>{displayName}</Typography.Text>\r\n            </div>\r\n            <Button ghost onClick={() => auth.signOut()}> Đăng Xuất</Button>\r\n        </WrapperStyled>\r\n    )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { Collapse, Typography, Button } from 'antd'\r\nimport styled from 'styled-components'\r\nimport { PlusSquareOutlined } from '@ant-design/icons'\r\nimport { AppContext } from '../../context/AppProvider';\r\n\r\n\r\n\r\nconst { Panel } = Collapse\r\n\r\nconst PanelStyled = styled(Panel)`\r\n    &&&{\r\n        .ant-collapse-header,p{\r\n            color:white;\r\n        }\r\n        .ant-collapae-content-box{\r\n            padding: 0 , 40px;\r\n        }\r\n    }\r\n`;\r\n\r\nconst LinkStyled = styled(Typography.Link)`\r\n    display:block;\r\n    margin-bottom: 5px;\r\n    color:white;\r\n`;\r\n\r\n\r\nexport default function Roomlist() {\r\n\r\n    const { rooms, setIsAddRoomVisible , setSelectedRoomId} = useContext(AppContext)\r\n    const handleAddRoom = () => {\r\n        setIsAddRoomVisible(true)\r\n    }\r\n\r\n    return (\r\n        <Collapse ghost defaultActiveKey={['1']}>\r\n            <PanelStyled header=\"Danh Sách Phòng\" key='1'>\r\n                {\r\n                    rooms.map(room => <LinkStyled onClick={() => setSelectedRoomId(room.id)} key={room.id}>{room.name}</LinkStyled>)\r\n                }\r\n                <Button type='text' icon={<PlusSquareOutlined />} onClick={handleAddRoom} className='add-room'>Thêm Phòng</Button>\r\n            </PanelStyled>\r\n        </Collapse >\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Col, Row } from 'antd'\r\nimport Userinfo from './Userinfo'\r\nimport Roomlist from './Roomlist'\r\nimport styled from 'styled-components'\r\n\r\n\r\nconst SlidebarStyled = styled.div`\r\n    background: #9e82df;\r\n    color : white;\r\n    height : 100vh;\r\n`\r\n\r\nexport default function Slidebar() {\r\n\r\n\r\n\r\n    return (\r\n        <SlidebarStyled>\r\n            <Row>\r\n                <Col span={24}>\r\n                    <Userinfo />\r\n                </Col>\r\n                <Col span={24}>\r\n                    <Roomlist />\r\n                </Col>\r\n            </Row>\r\n        </SlidebarStyled>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Col, Row } from 'antd'\r\nimport Slidebar from './Slidebar'\r\nimport ChatRoom from './ChatRoom'\r\nexport default function ChatWinDow() {\r\n    return (\r\n        <div>\r\n            <Row>\r\n                <Col span={6}>\r\n                    <Slidebar />\r\n                </Col>\r\n                <Col span={18}>\r\n                    <ChatRoom />\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n","import { Form, Input, Modal } from 'antd'\r\nimport React, { useContext } from 'react'\r\nimport { AppContext } from '../../context/AppProvider'\r\nimport { AuthContext } from '../../context/AuthProvider';\r\nimport { addDocument } from '../../firebae/firestore';\r\n\r\nexport default function AddRoom() {\r\n\r\n    const { isAddRoomVisible, setIsAddRoomVisible } = useContext(AppContext)\r\n    const { user: { uid } } = useContext(AuthContext)\r\n\r\n\r\n    const [form] = Form.useForm();\r\n\r\n    const handleOk = () => {\r\n        //add  new room\r\n        console.log({ formData: form.getFieldsValue() })\r\n        setIsAddRoomVisible(false)\r\n        addDocument('rooms', { ...form.getFieldsValue(), members: [uid] })\r\n\r\n        // rs form modal\r\n        form.resetFields()\r\n\r\n    }\r\n    const handleCancel = () => {\r\n        form.resetFields()\r\n        setIsAddRoomVisible(false)\r\n    }\r\n    return (\r\n        <>\r\n            <div>\r\n                <Modal\r\n                    title='Tạo Phòng'\r\n                    visible={isAddRoomVisible}\r\n                    onOk={handleOk}\r\n                    onCancel={handleCancel}\r\n                >\r\n                    <Form form={form}>\r\n                        <Form.Item label='Tên phòng' name='name'>\r\n                            <Input placeholder='Nhập Tên Phòng' />\r\n                        </Form.Item>\r\n                        <Form.Item label='Nội Dung : ' name='description'>\r\n                            <Input.TextArea placeholder='Nhập Mô Tả' />\r\n                        </Form.Item>\r\n                    </Form>\r\n                </Modal>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { Form, Select, Modal, Spin } from 'antd'\r\nimport Avatar from 'antd/lib/avatar/avatar';\r\nimport { debounce } from 'lodash';\r\nimport React, { useContext, useState } from 'react'\r\nimport { AppContext } from '../../context/AppProvider'\r\nimport { AuthContext } from '../../context/AuthProvider';\r\nimport { db } from '../../firebae/config';\r\nimport { addDocument } from '../../firebae/firestore';\r\n\r\n\r\nfunction DebounSelect({ fetchOptions, debounceTimeout = 300, ...props }) {\r\n    const [fetching, setFetching] = useState(false)\r\n    const [options, setOptions] = useState([])\r\n\r\n\r\n\r\n    const debounceFetcher = React.useMemo(() => {\r\n        const loadOptions = value => {\r\n            setOptions([])\r\n            setFetching(true)\r\n\r\n\r\n\r\n            // gọi api từ ngoài\r\n            fetchOptions(value, props.currentMembers)\r\n                .then(newOptions => {\r\n                    setOptions(newOptions)\r\n                    setFetching(false)\r\n                })\r\n        }\r\n        return debounce(loadOptions, debounceTimeout)\r\n    }, [debounceTimeout, fetchOptions])\r\n    return (\r\n        <Select\r\n            labelInValue\r\n            filterOption={false}\r\n            onSearch={debounceFetcher}\r\n            notFoundContent={fetching ? <Spin size='small' /> : null}\r\n            {...props}\r\n        >\r\n            {\r\n                options.map((opt => (<Select.Option key={opt.value} value={opt.value} title={opt.label} >\r\n                    <Avatar size='small' src={opt.photoURL}>\r\n                        {opt.photoURL ? '' : opt.label?.charAt(0).toUpperCase()}\r\n                    </Avatar>\r\n                    {`${opt.label}`}\r\n                </Select.Option>)))\r\n            }\r\n\r\n        </Select>\r\n\r\n    )\r\n}\r\n\r\nasync function fetchUserList(search, currentMembers) {\r\n    return db.collection('user').where('keywords', 'array-contains', search).orderBy('displayName').limit(10).get().then(snapshot => {\r\n        return snapshot.docs.map(doc => ({\r\n            label: doc.data().displayName,\r\n            value: doc.data().uid,\r\n            photoURL: doc.data().photoURL,\r\n        })).filter(opt => !currentMembers.includes(opt.value))\r\n    })\r\n}\r\n\r\n\r\nexport default function Invite() {\r\n    const [value, setValue] = useState([])\r\n    const { isInvite, setIsInvite, selectedRoomId, selectedRoom } = useContext(AppContext)\r\n    const { user: { uid } } = useContext(AuthContext)\r\n\r\n\r\n    const [form] = Form.useForm();\r\n\r\n    const handleOk = () => {\r\n\r\n        // rs form modal\r\n        form.resetFields()\r\n        //Update Phòng\r\n        const roomRef = db.collection('rooms').doc(selectedRoomId)\r\n        setIsInvite(false)\r\n\r\n        roomRef.update({\r\n            members: [...selectedRoom.members, ...value.map((val) => val.value)]\r\n\r\n        })\r\n    }\r\n    const handleCancel = () => {\r\n        form.resetFields()\r\n        setIsInvite(false)\r\n    }\r\n    return (\r\n        <>\r\n            <div>\r\n                <Modal\r\n                    title='Mời Thêm Thành Viên'\r\n                    visible={isInvite}\r\n                    onOk={handleOk}\r\n                    onCancel={handleCancel}\r\n                >\r\n                    <Form form={form} layout='vertical'>\r\n                        <DebounSelect\r\n                            mode='multiple'\r\n                            label='Tên Các Thành Viên'\r\n                            value={value}\r\n                            placeholder='Nhập tên bạn muốn mời vào đê'\r\n                            fetchOptions={fetchUserList}\r\n                            onChange={(newvalue) => setValue(newvalue)}\r\n                            style={{ width: '100%' }}\r\n                            currentMembers={selectedRoom.members}\r\n                        />\r\n                    </Form>\r\n                </Modal>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import \"antd/dist/antd.css\";\nimport Login from \"./components/login\";\nimport { Route, Switch, BrowserRouter } from \"react-router-dom\";\nimport ChatRoom from \"./components/chatrooms/ChatRoom\";\nimport AuthProvider from \"./context/AuthProvider\";\nimport ChatWinDow from \"./components/chatrooms/ChatWinDow\";\nimport AppProvider from \"./context/AppProvider\";\nimport AddRoom from \"./components/Modal/AddRoom\";\nimport Invite from \"./components/Modal/Invite\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <AuthProvider>\n          <AppProvider>\n            <Switch>\n              <Route component={Login} path=\"/login\" />\n              <Route component={ChatWinDow} path=\"/\" />\n            </Switch>\n            <AddRoom />\n            <Invite />\n          </AppProvider>\n        </AuthProvider>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}